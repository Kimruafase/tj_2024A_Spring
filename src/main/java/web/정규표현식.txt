> 정규표현식
    > 특정한 규칙을 가진 문자열의 집합을 표현할 때 사용하는 형식 언어
    > 주로 문자열 데이터 검사할 때 사용된다. -> 유효성 검사
    > JS의 검사 메소드
        > 정규표션식.test(검사할 대상)

    > 형식 규칙
        > /^                : 정규 표현식 시작 알림
        > &/                : 정규 표현식 끝 알림

    > 허용할 문자 or 숫자
        > [a-z]             : 영문 소문자 허용
        > [a-zA-Z가-힣]      : 영문 대소문자, 한글 허용
        > [a-zA-Z가-힣0-9]   : 영문 대소문자, 한글, 숫자 허용
        > [ac]              : a 또는 c 허용
        > [!@#$]            : 특수문자 허용

    > {최소 길이, 최대 길이}   : 허용 문자의 길이
        > {5, 30}           : 5글자부터 30글자 사이 허용

    > ()                    : 패턴 그룹
        > (?=.*[A-Za-z])    : 영문 대소문자 1개 이상 필수 허용
        > (?=.*[0-9])       : 숫자 1개 이상 필수 허용
            > + : 앞에 있는 패턴 1개 이상 반복
            > ? : 앞에 있는 패턴 0개 혹은 1개 이상 반복
            > * : 앞에 있는 패턴 0개 반복
            > . : 1개 문자 패턴
                > ?=.* : 앞에 문자가 있던 없던 문자 1개 이상 필수 포함
                > ?=.*[문자 패턴]

    > ex)
        > /^a$/                      -> 검사 대상의 문자가 'a' 이면 true, 아니면 false
        > /^[a-z]&/                  -> 검사 대상의 문자가 'a'-'z' 중 하나면 true, 아니면 false
        > /^[A-A]&/                  -> 검사 대상의 문자가 'A'-'Z' 중 하나면 true, 아니면 false
        > /^[가-힣]&/                 -> 검사 대상의 문자가 '가'-'힣' 중 하나면 true, 아니면 false
        > /^[a-zA-Z0-9]{5,30}$/      -> 영문 대소문자, 숫자 조합의 5~30 글자 사이 허용