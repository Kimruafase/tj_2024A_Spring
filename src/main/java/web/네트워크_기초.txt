네크워크
    > 통신 : 정보를 서로 주고 받는 과정 또는 행위
        > 모스부호, 신호등, 편지, 신문, 채팅, 이메일 ~~ 등등

    > 네트워크 : 인터넷을 통해 연결된 구조에서 다양한 정보와 서비스를 주고받는 과정 / 행위

    > 특징
        > 1. 글로벌 연결성 : 전 세계의 컨퓨터들과 연결하므로 지리적 제약이 없고 정보가 공유 가능하다.
        > 2. 분산 구조 : 중앙 집중식이 아닌 분산 구조로 장애가 발생 시 전체 시스템의 영향을 미치지 않는다.
        > 3. 다양한 서비스 : 이메일, 웹 서비스, 스트리밍, 파일 전송 등등 제공
        > 4. * 프로토콜 * : 표준화된 통신 규약, 서로 다른 시스템 간의 원활한 통신 제공

    > 구성 요수
        > 1. 네트워크 인프라 : 케이블, 라우터, 위성, 모뎀 등등 물리적인 장치와의 연결 매체가 필요하다
        > 2. * 프로토콜 * : 인터넷에서 데이터 통신을 가능하게 하는 규칙과 절차
        > 3. 서버 : 데이터를 제공하는 컴퓨터 ex_ 톰캣 서버, MySQL 서버 등등
        > 4. 클라이언트 : 데이터를 요청하고 받는 컴퓨터 ex_ 크롬 브라우저
        > 5. 도메인(DNS) : 복잡한 IP 구조는 일반인 사람들이 해석하기 어렵기 때문에 문자 변환된 주소를 제공한다.
            > ex_ [도메인 주소] https://www.naver.com

    > 통신 흐름
        > 1. 클라이언트 : 브라우저(ex_크롬)를 통해 요청을 보낸다. www.naver.com
        > 2. 도메인 네임 -> IP 주소 변경
        > 3. HTTP 프로토콜로 요청을 보낸다.
        > 4. TCP / IP 프로토콜을 이용한 해당 서버의 IP로 접속 요청을 보낸다.
        > 5. HTTP 프로토콜로 요청을 받는다.(서버 측에서)
        > 6. 웹 서버에서 해당 요청을 처리한다.
        > 7. 웹 서버가 HTTP 프로토콜로 응답 보낸다.
        > 8. TCP / IP 프로토콜 이용한 해당 클라이언트의 IP로 접속요청 보낸다.
        > 9. HTTP 프로토콜로 응답 받는다.
        > 10. 클라이언트가 응답을 확인한다.

프로토콜이란?
    > 네트워크에서 데이터를 교환하기 위한 규칙 and 절차
    > 주요 프로토콜
        > 1. IP                 : 데이터 패킷을 출발지에서 목적지로 전송하는 역할 -> 식별용
            > 친구에게 우편(데이터) 보낼 때 작성하는 친구 집 주소처럼 IP는 집 주소 역할을 한다.
            > 네트와크 컴퓨터 간 서로 통신할 때 식별하는 역할 ex_ 192.168.30.252 -> 내 현재 PC의 IP 주소
            > 0 ~ 255 조합으로 4자리를 갖는 구조, ipv4 vs ipv6
            > 내 IP 주소 알기        : 1. 명령 프롬프트(cmd) 에서 ipconfig 입력
            > 로컬 IP(현재 내 PC)    : localhost == 127.0.0.1
            > 공개용 IP (현재 내 PC)  : 192.168.30.252
        > 2. PORT               : 네트워크 컴퓨터 내 프로세스(프로그램)를 식별하는 역할
            > 친구에게 우편(데이터)을 보내고 그 집에 방의 문이 많을 때 그 방의 문을 식별하는 역할
            > 서버 PC IP에 접속하면 수 많은 프로그램들이 존재하는데 그 중에 어떤 프로그램과 연결할 지 식별
            > 톰캣 : 8080, MySQL : 3306, HTTP : 80 등을 주로 사용
        > 3. * HTTP *           : 웹 브라우저와 웹 서버 간 데이터 전송 역할
        > 4. SMTP               : 이메일 송신 or 서버에서 수신 or 서버로 전송 역할
        > 5. FTP                : 파일 전송
        > 6. DNS                : IP 주소를 문자형식으로 변환 해주는 역할, 도메인 네임 시스템
        > 7. HTTPS              : SSL / TLS 가 적용된 보안 HTTP
        > 8. SSL / TLS          : 인터넷을 암호화하여 보안 제공하는 역할

    > 구조
        > 1. OSI 7계층 모델
        > 2. TCP / IP 4계층 모델