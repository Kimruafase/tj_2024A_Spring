Object 클래스
    > 1. java.lang 패키지
        > String, Integer, System 와 같은 클래스를 사용했다.

        > java.lang 패키지에 포함된 클래스들이다.
            > 주로 많이 사용되는 클래스들의 패키지명

            > 컴파일 시 자동으로 추가되므로 import 는 하지 않는다.
                > java.lang.String 클래스
                > java.lang.Integer 클래스

    > 2. Object
        > 자바에서 최상위 클래스(모든 클래스들의 조상, 모든 클래스들은 Object 를 상속 받는다.)

        > 모든 클래스는 자동으로 'extends Object' 가 적용된다.
            > 자바는 100% 객체지향을 구현하기 위해서 이런 구조를 만든 것이다.

        > 주로 사용하는 메소드
            > 1. toString()         : 객체를 문자영로 표현하여 반환하는 함수, 주로 Overriding 해서 객체의 설명, 변수의 값 반환

            > 2. equals(Object obj) : 두 객체가 동일한 지 여부를 판단해서 반환함. Overriding 해서 동일한 객체임을 정의할 수 있다.
                > ' == ' vs 'equals()'
                    > ' == '     : stack 메모리(주로 지역변수)가 갖는 값(Literal) or 참조값 비교
                    > 'equals()' : heap 메모리가 갖는 참조값을 비교, 주로 참조 타입 시 사용
                        > ex_ 10 == 10                            -> true
                        > ex_ "A" == "A"                          -> true
                        > new String("A").equals(new String("A")) -> false, new 사용 시 서로 다른 참조값(주소)이 생성되므로 두 "A"는 다르다.

            > 3. hashCode()         : 객체의 해시코드값(주소값)을 반환하는 함수.
                > 해시(hash)는 정보를 저장하거나 검색할 때 사용하는 자료 구조(자료를 저장하는 방법) 중 하나이다.
                > 정보를 어디에 저장할 것인지, 어디서 가져올 것인지 해시 함수를 사용하는 방법.
                > 해시 함수란 객체의 특정 정보를 매개변수 값으로 넣으면 그 객체가 저장되어야 할 위치나 저장된 해시 테이블 주소(위치)를 반환.

            > 4. clone()            : 객체를 복제해서 동일한 멤버변수를 가진 새로운 객체 반환 함수
                > Cloneable 인터페이스를 implements 구현 해서 구현 클래스를 이용한 clone 메소드를 Overriding 해서 사용


            [1]
                stack 메모리                   heap 메모리

                str1                          new String() : 302번지 주소값을 가지는 객체 생성
                str2                          new String() : 402번지 주소값을 가지는 객체 생성

                1. '=='     : 다르다, 302번지와 402번지 주소값을 가지는 두 지역 변수는 다른 것이 맞다.
                2. equals() : 302번지와 402번지가 가지는 객체를 비교했더니 같다고 출력.

            [2]
                method 메모리              stack 메모리                   heap 메모리

                리터럴                       str1(302번지 참조)            new String() : 302번지 주소값을 가지는 객체 생성
                                                                                멤버변수 : "abc" , 502번지 주소값을 가지는 객체
                                            str2(402번지 참조)            new String() : 402번지 주소값을 가지는 객체 생성
                                                                                    멤버변수 : "abc" , 502번지 주소값을 가지는 객체
                                            str3(502번지 참조)
                                                                                - "abc" : 502번지 주소값을 가지는 객체 생성
                *리터럴(Literal) : 1, 3.15, true, '0'